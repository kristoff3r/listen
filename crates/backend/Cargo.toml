[package]
edition.workspace = true
license.workspace = true
name = "backend"
version.workspace = true

[features]
default = []
local-https = []

[dependencies]
api = { path = "../api" }
database = { path = "../database" }
ui = { path = "../ui", default-features = false, features = ["ssr"] }

anyhow = { workspace = true, features = ["backtrace"] }
axum = { workspace = true, features = ["macros", "ws"] }
axum-extra = { workspace = true, features = ["typed-header", "cookie"] }
axum-server = { workspace = true, features = ["tls-rustls"] }
axum-test.workspace = true
bincode.workspace = true
dashmap.workspace = true
deadpool = { workspace = true, features = ["rt_tokio_1"] }
diesel = { workspace = true, features = ["postgres", "time"] }
diesel-async = { workspace = true, features = ["postgres", "deadpool"] }
dotenvy.workspace = true
futures.workspace = true
futures-util = { workspace = true, features = ["sink", "std"] }
headers.workspace = true
hyper.workspace = true
jsonwebtoken.workspace = true
leptos = { workspace = true, features = ["ssr"] }
leptos_axum.workspace = true
oauth2.workspace = true
openidconnect.workspace = true
rand.workspace = true
rustls.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
strum = { workspace = true, features = ["strum_macros", "derive"] }
tempfile.workspace = true
time = { workspace = true, features = ["serde"] }
tokio = { workspace = true, features = ["full"] }
tokio-tungstenite.workspace = true
tokio-util.workspace = true
tower = { workspace = true, features = ["util"] }
tower-http = { workspace = true, features = ["fs", "trace", "timeout"] }
tracing.workspace = true
tracing-error.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] }
url.workspace = true
youtube_dl.workspace = true
